// src/services/scraping/vulnerabilityScraper.js - ENHANCED VERSION
import axios from 'axios';

const SCRAPING_API_URL = 'http://localhost:3001/api';

export const vulnerabilityScraper = {
  async scrapeVulnerabilityDetails(uri) {
    console.log('Scraping vulnerability details for:', uri);
    try {
      const response = await axios.post(`${SCRAPING_API_URL}/scrape`, {
        url: uri
      });

      console.log('Scraping response:', response.data);
      return response.data;
    } catch (error) {
      console.error('Error in scrapeVulnerabilityDetails:', error);
      throw error;
    }
  },

  async scrapeStackOverflow(query) {
    console.log('Scraping Stack Overflow for:', query);
    try {
      const response = await axios.post(`${SCRAPING_API_URL}/scrape/stackoverflow`, {
        query
      });
      return response.data;
    } catch (error) {
      console.error('Error in scrapeStackOverflow:', error);
      throw error;
    }
  },

  async scrapeSnyk(query) {
    console.log('Scraping Snyk for:', query);
    try {
      const response = await axios.post(`${SCRAPING_API_URL}/scrape/snyk`, {
        query
      });
      return response.data;
    } catch (error) {
      console.error('Error in scrapeSnyk:', error);
      throw error;
    }
  },

  // NEW: Batch scraping method using the backend endpoint
  async batchScrapeCVEs(cveList, sources) {
    console.log('Starting batch scraping for CVEs:', cveList, 'Sources:', sources);
    
    try {
      const response = await axios.post(`${SCRAPING_API_URL}/scrape/batch`, {
        cveList,
        sources
      }, {
        timeout: 300000 // 5 minute timeout for batch operations
      });

      return response.data;

    } catch (error) {
      console.error('Batch scraping error:', error);
      throw new Error(`Batch scraping failed: ${error.response?.data?.message || error.message}`);
    }
  },

  // NEW: Send collected URLs to crawler (standalone method)
  async sendToCrawler(urls) {
    console.log('Sending URLs to crawler:', urls);
    
    try {
      const response = await axios.post('http://localhost:8000/crawl', {
        urls: urls
      }, {
        headers: {
          'Content-Type': 'application/json'
        },
        timeout: 30000 // 30 second timeout
      });

      console.log('Crawler response:', response.data);
      return response.data;

    } catch (error) {
      console.error('Error sending to crawler:', error);
      throw new Error(`Failed to send URLs to crawler: ${error.message}`);
    }
  }
};