// src/components/vulnerability/SourceSelector.jsx
import React from 'react';
import {
  BookOpen,
  MessageSquare,
  Code,
  Database,
  Check,
  ExternalLink,
} from 'lucide-react';

export const SCRAPING_SOURCES = [
  {
    id: 'official',
    name: 'Official Documentation',
    icon: BookOpen,
    color: 'text-blue-600',
    bgColor: 'bg-blue-50',
    description: 'Vendor security advisories and official documentation',
    enabled: true
  },
  {
    id: 'stackoverflow',
    name: 'Stack Overflow',
    icon: MessageSquare,
    color: 'text-orange-600',
    bgColor: 'bg-orange-50',
    description: 'Community discussions and solutions',
    enabled: true  // Changed to true
  },
  {
    id: 'github',
    name: 'GitHub Issues',
    icon: Code,
    color: 'text-gray-600',
    bgColor: 'bg-gray-50',
    description: 'Related issues and pull requests',
    enabled: false
  },
  {
    id: 'cve',
    name: 'CVE Database',
    icon: Database,
    color: 'text-purple-600',
    bgColor: 'bg-purple-50',
    description: 'Common Vulnerabilities and Exposures details',
    enabled: false
  },
];

export const SourceSelector = ({ selectedSources, onSourceToggle, finding }) => (
  <div className="grid grid-cols-2 gap-3">
    {SCRAPING_SOURCES.map((source) => {
      const Icon = source.icon;
      const isSelected = selectedSources.includes(source.id);
      const isDisabled = !source.enabled;

      return (
        <button
          key={source.id}
          onClick={() => !isDisabled && onSourceToggle(source.id)}
          disabled={isDisabled}
          className={`
            relative flex flex-col p-3 rounded-lg border transition-all duration-200
            ${isSelected ? 'bg-blue-50/50 border-blue-200' : 'border-gray-200 hover:bg-gray-50'}
            ${isDisabled ? 'opacity-50 cursor-not-allowed' : 'cursor-pointer'}
            group
          `}
        >
          {/* Checkbox indicator */}
          <div
            className={`
              absolute top-2 right-2 w-4 h-4 rounded-full border transition-all duration-200
              flex items-center justify-center
              ${isSelected ? 'bg-blue-600 border-transparent' : 'border-gray-300 bg-white'}
            `}
          >
            {isSelected && <Check className="w-3 h-3 text-white" />}
          </div>

          <div className="flex min-h-[60px]">
            <Icon className={`w-4 h-4 mt-0.5 flex-shrink-0 ${source.color}`} />
            <div className="ml-2.5 flex-1">
              <div className="flex items-center">
                <p className={`text-sm font-medium ${isSelected ? 'text-blue-600' : 'text-gray-900'}`}>
                  {source.name}
                </p>
                {isDisabled && (
                  <span className="ml-2 text-xs text-gray-500 px-1.5 py-0.5 bg-gray-100 rounded-full">
                    Soon
                  </span>
                )}
              </div>
              <p className="text-xs text-gray-500 mt-0.5 line-clamp-2">
                {source.description}
              </p>
            </div>
          </div>

          {!isDisabled && (
            <div className="mt-2 pt-2 border-t border-gray-100">
              <a
                href="#"
                onClick={(e) => {
                  e.preventDefault();
                  e.stopPropagation();
                  console.log(`Selected ${source.name} source`);
                }}
                className="text-xs flex items-center text-gray-500 hover:text-gray-700"
              >
                View Source Info
                <ExternalLink className="w-3 h-3 ml-1" />
              </a>
            </div>
          )}
        </button>
      );
    })}
  </div>
);